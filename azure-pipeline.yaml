trigger:
  branches:
    include:
      - master
      - feature/*
  paths:
    exclude:
      - README.md
variables:
  vmImage: 'ubuntu-latest'
  aksResourceGroup: 'aks-demo'
  acrResourceGroup: ''
  kvResourceGroup: 'kv-demo'
  location: 'UK South'
  subscription: 'Visual Studio Enterprise - MPN'
  serviceConnection: 'infra-demo'

stages:

  - stage: DeployKV
    displayName: 'Create KeyVault'
    jobs:
      - job: RGDeployment
        displayName: Create Resource Group
        pool:
          vmImage: $(vmImage)

        steps:
        - task: AzureCLI@2
          displayName: Run Azure CLI
          inputs:
            azureSubscription: $(serviceConnection)
            scriptType: pscore
            scriptLocation: inlineScript
            inlineScript: |
              az group create -l uksouth -n $(kvResourceGroup)

      - job: ARMDeployment
        displayName: Create or Update KeyVault
        pool:
          vmImage: $(vmImage)

        steps:
        - task: AzureResourceGroupDeployment@2
          inputs:
            azureSubscription: $(serviceConnection)
            resourceGroupName: $(kvResourceGroup)
            location: $(location)
            csmFile: 'keyvault_template/kvdeploy.json'
            csmParametersFile: 'keyvault_template/kvdeploy.parameters.json'

  - stage: CreateAKSSPN
    displayName: 'Create AKS SPN & Add To KeyVault'
    jobs:
      - job: RunPowerShellScript
        pool:
          vmImage: $(vmImage)
        variables:
          kvName: 'infrakv3vouavntyiekr'
          spnName: 'aks-demo'

        steps:
        - task: AzurePowerShell@4
          displayName: Run PowerShell Task
          inputs:
            azureSubscription: $(serviceConnection)
            scriptType: 'filePath'
            scriptPath: './scripts/aksspn.ps1'
            scriptArguments:
              -KVName $(kvName) `
              -spnName $(spnName)


#- stage: DeployAKS
#  displayName: 'Create AKS Cluster'
#  jobs:
#  - job: RGDeployment
#    displayName: Create Resource Group
#    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
#    pool:
#      vmImage: $(vmImage)
#
#    steps:
#    - task: AzureCLI@2
#      displayName: Run Azure CLI
#      inputs:
#        azureSubscription: $(serviceConnection)
#        scriptType: pscore
#        scriptLocation: inlineScript
#        inlineScript: |
#          az group create -l uksouth -n $(aksResourceGroup)


#  - job: ARMDeployment
#    dependsOn: RGDeployment
#    displayName: Creake AKS
#    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
#    pool:
#      vmImage: $(vmImage)
#    steps:
#    - task: AzureCLI@2
#      displayName: Run Azure CLI
#      inputs:
#        azureSubscription: $(serviceConnection)
#        scriptType: pscore
#        scriptLocation: inlineScript
#        inlineScript: |
#          az group create -l uksouth -n $(aksResourceGroup)